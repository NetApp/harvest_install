---
- hosts: localhost
  name: Manage Harvest
  vars_files:
    harvest/harvest.yml
  collections:
  - ansible.builtin
  - community.docker
  tasks:
  - name: Verify images
    docker_image:
      name: "{{ item }}"
      source: pull
    loop:
    - prom/prometheus
    - prom/alertmanager
    - cr.netapp.io/harvest:latest
    - grafana/grafana
    tags: setup
  - name: Configure/Verify Prometheus targets
    lineinfile:
      path: ./prometheus/prometheus.yml
      line: "  - targets: ['harvest_{{ item }}:{{Pollers[item].ansible_port}}']"
    loop: "{{ Pollers|list }}"
  - name: Create Harvest Network
    docker_network:
      name: harvest
    tags: setup
  - name: Create Prometheus storage
    docker_volume:
      name: prometheus_data
  - name: Setup/Verify Prometheus
    docker_container:
      name: harvest_prometheus
      image: prom/prometheus
      restart: true
      restart_policy: unless-stopped
      volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      command:
      - '--config.file=/etc/prometheus/prometheus.yml' 
      ports: "9090:9090"
      networks: 
      - name: harvest
    tags: setup
  - name: Setup/Verify Prometheus AlertManager
    docker_container:
      name: harvest_prometheus_alertmanager
      image: prom/alertmanager
      restart: true
      restart_policy: unless-stopped
      volumes:
      - prometheus_data:/prometheus
      - ./prometheus_alertmanager/alertmanager.yml:/etc/prometheus/alertmanager.yml
      command:
      - '--config.file=/etc/prometheus/alertmanager.yml' 
      ports: "9093:9093"
      networks: 
      - name: harvest
    tags: setup
  - name: Setup/verify Grafana
    docker_container:
      name: harvest_grafana
      image: grafana/grafana
      restart_policy: unless-stopped
      env:
        GF_SECURITY_ADMIN_PASSWORD=pass
      ports:
      - "3000:3000"      
      networks:
      - name: harvest
    tags: setup
  - name: Setup/verify Harvest pollers
    docker_container:
      name: "harvest_{{ item }}"
      image: cr.netapp.io/harvest:latest
      restart_policy: unless-stopped
      volumes:
      - ./harvest/:/etc/harvest/
      command:
      - --config
      - /etc/harvest/harvest.yml
      - -p
      - "{{ item }}"
      - --promPort
      - "{{ Pollers[item].ansible_port }}"
      networks:
      - name: harvest
      detach: true
    loop: "{{ Pollers|list}}" 
    tags: setup
  - name: Create bearer token
    uri:
      url: "http://{{ansible_default_ipv4.address}}:3000/api/auth/keys"
      force_basic_auth: true
      method: POST
      user: admin
      password: pass
      headers:
        Content-Type: application/json
      body: '{"name": "apikeycurl", "role": "Admin"}'
    register: login 
    tags: never, api
  - name: Creating Prometheus datasource in Grafana
    uri:
      url: "http://{{ansible_default_ipv4.address}}:3000/api/datasources"
      method: POST
      headers:
        Content-Type: application/json
        Authorization: "Bearer {{ login.json.key }}"
      body: '{"name": "Prometheus", "type": "prometheus", "access": "proxy", "url": "http://harvest_prometheus:9090", "isDefault": true, "basicAuth": false}'
    tags: never, api     
  - name: Prep Grafana dashboard load 
    lineinfile:
      path: ./harvest/harvest.yml
      insertafter: '^Tools:'
      regexp: '  grafana_api_token:'
      line: '  grafana_api_token: {{ login.json.key }}'
    tags: never, api     
  - name: Add Dashboards to Grafana
    docker_container_exec:
      container: "harvest_{{ Pollers|first }}"
      command: /bin/sh -c "bin/harvest grafana import -a harvest_grafana:3000 --config /etc/harvest/harvest.yml"
    tags: never, api, dashboard
  - name: Stop Prometheus
    docker_container:
      name: harvest_prometheus
      image: prom/prometheus
      state: stopped
    tags: never, stop
  - name: Stop Grafana
    docker_container:
      name: harvest_grafana
      image: grafana/grafana
      state: stopped
    tags: never, stop
  - name: Stop Harvest pollers
    docker_container:
      name: "harvest_{{ item }}"
      image: rahulguptajss/harvest
      state: stopped
      detach: true
    loop: "{{ Pollers|list}}" 
    tags: never, stop
  - name: Remove Prometheus
    docker_container:
      name: harvest_prometheus
      state: absent
    tags: never, del
  - name: Remve Grafana
    docker_container:
      name: harvest_grafana
      state: absent
    tags: never, del
  - name: Remove Harvest pollers
    docker_container:
      name: "harvest_{{ item }}"
      state: absent
    loop: "{{ Pollers|list}}" 
    tags: never, del, upgrade
  - name: update images
    docker_image:
      name: rahulguptajss/harvest
      force_source: true
      source: pull
    tags: never, upgrade
  - name: Update Harvest pollers
    docker_container:
      name: "harvest_{{ item }}"
      image: rahulguptajss/harvest
      restart: true
      volumes:
      - ./harvest/:/etc/harvest/
      command:
      - --config
      - /etc/harvest/harvest.yml
      - -p
      - "{{ item }}"
      - --promPort
      - "{{ Pollers[item].ansible_port }}"
      networks:
      - name: harvest
      detach: true
    loop: "{{ Pollers|list}}" 
    tags: never, upgrade
